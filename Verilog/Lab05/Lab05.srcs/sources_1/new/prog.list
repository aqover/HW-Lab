010000_00000_00000_1111111111110000     // 0x0   : ORI $r0 $r0 #65520
010000_00001_00001_1111111111110100     // 0x4   : ORI $r1 $r1 #65524
010000_00010_00010_1111111111111000     // 0x8   : ORI $r2 $r2 #65528
010000_00011_00011_1111111111111100     // 0xc   : ORI $r3 $r3 #65532
010000_00100_00100_1111111111100000     // 0x10  : ORI $r4 $r4 #65504
010000_00101_00101_1111111111100100     // 0x14  : ORI $r5 $r5 #65508
010000_00110_00110_1111111111101000     // 0x18  : ORI $r6 $r6 #65512
010000_11110_11110_0000000000000001     // 0x1c  : ORI $r30 $r30 #1
011000_00100_01010_0000000000000000     // 0x20  : LW $r10 0($r4) # loop
011000_00101_01011_0000000000000000     // 0x24  : LW $r11 0($r5)
011000_00110_01100_0000000000000000     // 0x28  : LW $r12 0($r6)
000001_00111_11111_00111_00000000011    // 0x2c  : ADD $r7 $r7 $r31 011
100100_01100_00111_0000000000010110     // 0x30  : BEQ $r12 $r7 add
000001_00111_11110_00111_00000000000    // 0x34  : ADD $r7 $r7 $r30 000
100100_01100_00111_0000000000010110     // 0x38  : BEQ $r12 $r7 sub
000001_00111_11110_00111_00000000000    // 0x3c  : ADD $r7 $r7 $r30 000
100100_01100_00111_0000000000010110     // 0x40  : BEQ $r12 $r7 or
000001_00111_11110_00111_00000000000    // 0x44  : ADD $r7 $r7 $r30 000
100100_01100_00111_0000000000010110     // 0x48  : BEQ $r12 $r7 and
000001_00111_11110_00111_00000000000    // 0x4c  : ADD $r7 $r7 $r30 000
100100_01100_00111_0000000000010110     // 0x50  : BEQ $r12 $r7 xor
000001_00111_11110_00111_00000000000    // 0x54  : ADD $r7 $r7 $r30 000
100100_01100_00111_0000000000010110     // 0x58  : BEQ $r12 $r7 notA
000001_00111_11110_00111_00000000000    // 0x5c  : ADD $r7 $r7 $r30 000
100100_01100_00111_0000000000010110     // 0x60  : BEQ $r12 $r7 comA
000001_00111_11110_00111_00000000000    // 0x64  : ADD $r7 $r7 $r30 000
100100_01100_00111_0000000000010110     // 0x68  : BEQ $r12 $r7 comB
110000_00000000000000000000011100       // 0x6c  : JMP display
011100_00000_01010_0000000000000000     // 0x70  : SW $r10 0($r0) # display
011100_00001_01011_0000000000000000     // 0x74  : SW $r11 0($r1)
011100_01000_10100_0000000000000000     // 0x78  : SW $r20 0($r8)
011100_00010_10100_0000000000000000     // 0x7c  : SW $r20 0($r2)
011000_01000_10100_0000000000000100     // 0x80  : LW $r20 4($r8)
011100_00011_10100_0000000000000000     // 0x84  : SW $r20 0($r3)
110000_00000000000000000000001000       // 0x88  : JMP loop
000001_01010_01011_10100_00000000000    // 0x8c  : ADD $r20 $r10 $r11 000 # add
110000_00000000000000000000011100       // 0x90  : JMP display
000001_01010_01011_10100_00000000001    // 0x94  : ADD $r20 $r10 $r11 001 # sub
110000_00000000000000000000011100       // 0x98  : JMP display
000001_01010_01011_10100_00000000010    // 0x9c  : ADD $r20 $r10 $r11 010 # or
110000_00000000000000000000011100       // 0xa0  : JMP display
000001_01010_01011_10100_00000000011    // 0xa4  : ADD $r20 $r10 $r11 011 # and
110000_00000000000000000000011100       // 0xa8  : JMP display
000001_01010_01011_10100_00000000110    // 0xac  : ADD $r20 $r10 $r11 110 # xor
110000_00000000000000000000011100       // 0xb0  : JMP display
000001_01010_01011_10100_00000000110    // 0xb4  : ADD $r20 $r10 $r11 110 # notA
110000_00000000000000000000011100       // 0xb8  : JMP display
000001_01010_01011_10100_00000000101    // 0xbc  : ADD $r20 $r10 $r11 101 # comA
110000_00000000000000000000011100       // 0xc0  : JMP display
000001_01011_01011_10100_00000000101    // 0xc4  : ADD $r20 $r11 $r11 101 # comB
110000_00000000000000000000011100       // 0xc8  : JMP display
